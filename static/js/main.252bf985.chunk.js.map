{"version":3,"sources":["components/Logo/camera.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","src","camera","alt","FaceRecognition","imgUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","onChange","type","name","Component","Register","onNameChange","onSubmitRegister","res","Rank","entries","concat","ImageLinkForm","onInputChange","onDetectSubmit","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","e","count","assign","catch","err","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.252bf985.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera.24088577.png\";","import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signout\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"signup\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign Up\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport camera from \"./camera.png\";\r\nimport \"./logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className=\"ma4mt0\">\r\n    <Tilt\r\n      className=\"Tilt br2 shadow-2\"\r\n      options={{ max: 100 }}\r\n      style={{ height: 150, width: 150 }}\r\n    >\r\n      <div className=\"Tilt-inner pa-3\">\r\n        <img src={camera} alt=\"Camera Logo\" />\r\n      </div>\r\n    </Tilt>\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imgUrl, box }) => (\r\n  <div className=\"center ma\">\r\n    <div className=\"absolute mt2\">\r\n      <img\r\n        id=\"inputimage\"\r\n        src={imgUrl}\r\n        alt=\"detection\"\r\n        width=\"500px\"\r\n        height=\"auto\"\r\n      />\r\n      <div\r\n        className=\"bounding-box\"\r\n        style={{\r\n          top: box.topRow,\r\n          right: box.rightCol,\r\n          bottom: box.bottomRow,\r\n          left: box.leftCol\r\n        }}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"http://localhost:3001/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onEmailChange}\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onPasswordChange}\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitSignIn}\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Sign in\"\r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => onRouteChange(\"register\")}\r\n                  className=\"f6 link dim black db pointer\"\r\n                >\r\n                  Register\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    fetch(\"http://localhost:3001/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-50-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onNameChange}\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"textl\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onEmailChange}\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    onChange={this.onPasswordChange}\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitRegister}\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      {`${name} , your current entry count is...`}\r\n      <div className=\"white f1 \">{entries}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onDetectSubmit }) => (\r\n  <div>\r\n    <p className=\"f3\">{\"This will detect the faces in your images.\"}</p>\r\n    <div className=\"center\">\r\n      <div className=\" form center pa4 br3 shadow-5\">\r\n        <input\r\n          className=\"f4 pa2 w-70 center\"\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n        />\r\n        <button\r\n          className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\r\n          onClick={onDetectSubmit}\r\n        >\r\n          Detect\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ImageLinkForm;\r\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport \"./App.css\";\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: \"\",\n  imgUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  displayFaceBox = box => {\n    console.log(box);\n    this.setState({ box });\n  };\n\n  onInputChange = e => {\n    this.setState({ input: e.target.value });\n  };\n\n  onDetectSubmit = () => {\n    this.setState({ imgUrl: this.state.input });\n    console.log(this.state.input);\n    fetch(\"http://localhost:3001/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch(\"http://localhost:3001/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = route => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    const { isSignedIn, imgUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onDetectSubmit={this.onDetectSubmit}\n            />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}